pprova <- outcome[,outcome$State]
pprova <- outcome[,State]
names(outcome)
pprova <- outcome[,"State"]
pprova <- outcome[,"State"==state]
View(pprova)
View(pprova)
ss <- split(outcome,"State")
ss <- split(outcome,outcome$State)
ss <- split(outcome,"State")
ss <- split(outcome,outcome$State)
ss <- split(outcome,outcome$State)[1]
ss <- split(outcome,outcome$State)[state]
data.frame(ss)
tt <- data.frame(ss)
tt[,11]
min(tt[,11], na.rm == TRUE)
help(na.rm)
??na.rm
help(colMeans)
min(tt[,11])
help(min)
min(tt[,11], na.rm = TRUE)
names(outcome)
tt[,11]==min(tt[,11], na.rm = TRUE)
tt[tt[,11]==min(tt[,11], na.rm = TRUE),"Name"}
tt[tt[,11]==min(tt[,11], na.rm = TRUE),"Name"]
tt[tt[,11]==min(tt[,11], na.rm = TRUE),"Hospital.Name"]
tt[tt[,11]==min(tt[,11], na.rm = TRUE),"State"]
tt[tt[,11]==min(tt[,11], na.rm = TRUE),"State",na.rm=TRUE]
tt[tt[,11]==min(tt[,11], na.rm = TRUE),]
tt[!is.na(tt[,11]==min(tt[,11], na.rm = TRUE)),]
tt[!is.na(tt[,11]==min(tt[,11], na.rm = TRUE)),"Hospital.Name"]
lapply(data, min(data[,11]))
lapply(tt, min(tt[,11]))
tt[(tt[,11]==min(tt[,11], na.rm = TRUE))==TRUE,]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),]
(tt[,11]==min(tt[,11], na.rm = TRUE))
!is.na(tt[,11]==min(tt[,11], na.rm = TRUE))
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),1]
na.omit(tt)
na.omit(tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),1])
[tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),"Hospital.Name"]]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),"Hospital.Name"]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),]
names(outcome)
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),"Hospital.Name"]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),7]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),2]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),"Name"]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),"State"]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),State]
tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),"State"]
xx <- tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),]
View(xx)
xx <- tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),state+".Hospital.Name"]
state+"Hospital.Name"
strct
paste(state,"Hospital.Name",sep=.)
paste(state,"Hospital.Name",sep=".")
xx <- tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")]
xx <- omit.na(tt[(tt[,11]==min(tt[,11], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")])
yy <- !is.na(xx)
yy <- xx[!is.na(xx)]
length(yy)
help(order)
x <- c("ciao","miao","babau","baobab")
y <- sort(x)
sort(x)[1]
clear()
delete()
state <- "AK"
outcome <- "heart attack"
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sameState <- split(outcomes,outcomes$State)
if(!stateValid(state,names(sameState))){
stop("invalid state")
}
stateValid <- function(state,stateNames){
for (i in 1:length(temp)){
if(stateNames[i] == state)
return(TRUE)
}
return(FALSE)
}
outcomeValid <- function(outcome){
if(!(outcome == "heart attack")){
if(!(outcome == "heart failure")){
if(!(outcome == "pneumonia"))
return(FALSE)
}
}
return(TRUE)
}
comeFirst <- function(vector){
return(sort(vector)[1])
}
if(!stateValid(state,names(sameState))){
stop("invalid state")
}
stateValid <- function(state,stateNames){
for (i in 1:length(stateNames)){
if(stateNames[i] == state)
return(TRUE)
}
return(FALSE)
}
if(!stateValid(state,names(sameState))){
stop("invalid state")
}
if(!outcomeValid(outcome)){
stop("invalid outcome")
}
data <- data.frame(sameState[state])
if(outcome == "heart failure"){
arelow <- data[(data[,17]==min(data[,17], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")]
lowest_ones <- arelow[!is.na(arelow)]
if(length(lowest_ones) != 1){
return(comesFrist(lowest_ones))
}
else{
return(lowest_ones)
}
}
if(outcome == "pneumonia"){
arelow <- data[(data[,11]==min(data[,11], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")]
lowest_ones <- arelow[!is.na(arelow)]
if(length(lowest_ones) != 1){
return(comesFrist(lowest_ones))
}
else{
return(lowest_ones)
}
}
if(outcome == "heart failure"){
arelow <- data[(data[,17]==min(data[,17], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")]
lowest_ones <- arelow[!is.na(arelow)]
if(length(lowest_ones) != 1){
return(comesFrist(lowest_ones))
}
else{
return(lowest_ones)
}
}
if(outcome == "heart attack"){
arelow <- data[(data[,11]==min(data[,11], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")]
lowest_ones <- arelow[!is.na(arelow)]
if(length(lowest_ones) != 1){
return(comesFrist(lowest_ones))
}
else{
return(lowest_ones)
}
}
data[(data[,11]==min(data[,11], na.rm = TRUE)),paste(state,"Hospital.Name",sep=".")]
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart attack")
best("TX","heart failure")
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart failure")
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart failure")
best("TX","heart failure")
arelow
names(outcomes)
View(data)
data[,17]
min(data[,17])
min(as.numeric(data[,17])
)
min(as.numeric(data[,17]),na.rm=TRUE)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart attack")
best("TX","heart attack")
min(as.numeric(data[,11]), na.rm = TRUE)
data[,11]==min(as.numeric(data[,11]), na.rm = TRUE)
as.numeric(data[,11])==min(as.numeric(data[,11]), na.rm = TRUE)
data[as.numeric(data[,11])==min(as.numeric(data[,11]), na.rm = TRUE),paste(state,"Hospital.Name",sep=".")]
data[data[,11]==min(data[,11], na.rm = TRUE),paste(state,"Hospital.Name",sep=".")]
min(data[,11], na.rm = TRUE)
source('~/.active-rstudio-document')
best("TX","heart attack")
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart attack")
as.character(min(as.numeric(data[,11]), na.rm = TRUE))
data[,11]==as.character(min(as.numeric(data[,11]), na.rm = TRUE))
help(as.numeric)
as.numeric(c("-1","2.7","B"))
as.numeric(c("-1","2.7","B"),na.rm = TRUE)
AS.CHARACTER(as.numeric(c("-1","2.7","B")))
as.character(as.numeric(c("-1","2.7","B")))
min(as.numeric(data[,11]), na.rm = TRUE)
data_num <- as.numeric(data[,11])
data_num = min(data_num, na.rm = TRUE)
data_num <- as.numeric(data[,11])
data_num == min(data_num, na.rm = TRUE)
na.omit(as.numeric(data[,11]))
complete.cases(as.numeric(data[,11]))
help(==)
as.numeric(data[!is.na(data[,11]),11])
as.numeric(data[!is.na(data[,11]),11])
!is.na(data[,11])
is.na(data[,11])
is.na(as.numeric(data[,11]))
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart failure")
!is.na(data[,11])
!is.na(as.numeric(data[,11]))
heart <- suppressWarnings(as.numeric(data[,11]))
data[!is.na(heart),11]
as.numeric(data[!is.na(heart),11])
heart2 <- as.numeric(data[!is.na(heart),11])
data[heart2 == min(heart, na.rm = TRUE), 1]
data[heart2 == min(heart, na.rm = TRUE), 11]
data[heart2 == min(heart, na.rm = TRUE), 12]
min(heart, na.rm = TRUE)
heart2 == min(heart, na.rm = TRUE)
heart <- suppressWarnings(as.numeric(data[,11]))
heart==min(heart, na.rm = TRUE)
hh <- heart==min(heart, na.rm = TRUE)
arelow <- data[hh,paste(state,"Hospital.Name",sep=".")]
lowest_ones <- arelow[!is.na(arelow)]
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart attack")
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","hert attack")
names(outcomes)
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
names(outcomes)
help(sort)
sameState <- split(outcomes,outcomes$State)
data <- data.frame(sameState["AK"])
sort(data)
data2 <- sort(data$Hospital.Name)
data2 <- sort(data$AK.Hospital.Name)
data3 <- sort(data[,11],na.last=TRUE)
data3
outcomes <- read.csv("outcome-of-care-measures.csv")
names(outcome)
names(outcomes)
summary(outcome)
summary(outcomes)
View(outcomes)
View(outcomes)
sameState <- split(outcomes,outcomes$State)
data <- data.frame(sameState["TX"])
View(data)
View(data)
min(data[,11])
data[,11]
type
type(data)
typeof(data[,11])
typeof(data[,17])
min(data[,11],na.rm=TRUE)
prova <-length(c(1,2,3,4))
typeof(prova)
names(outcomes)
sort(data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
sort(data$Hospital.Name)
sort(data$TX.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
sort(data$TX.Hospital.Nam)
help(order)
example(order)
help(with)
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sameState <- split(outcomes,outcomes$State)
data <- data.frame(sameState[state])
data <- data.frame(sameState["TX"])
heart_attack <- suppressWarnings(as.numeric(data[,11]))
which(sort(heart_attack)[5])
sort(heart_attack)[5]
which(heart_attack == sort(heart_attack[5])
)
heart_attack
which(heart_attack == sort(heart_attack)[5])
sort(heart_attack[5])
sort(heart_attack)[5]
sort(heart_attack)
data[order(TX.Hospital.Name)]
data[order("TX.Hospital.Name")]
data[order("TX.Hospital.Name"),]
data[order("TX.Hospital.Name"),11]
prova <- data[order("TX.Hospital.Name")]
View(prova)
View(prova)
prova <- data[order("TX.Hospital.Name"),]
prova <- data[,order("TX.Hospital.Name")]
prova <- data[order("TX.Hospital.Name"),]
View(prova)
View(prova)
View(prova)
names(outcomes)
prova <- data[order("TX.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack""),]
)
prova <- data[order("TX.Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"),]
View(prova)
View(outcomes)
View(data)
data2 <- data.frame(c(data[,2],data[,11]))
View(data2)
data2 <- data.frame(cbind(data[,2],data[,11]))
View(outcomes)
data2
sort(data[,2])
data2[order(data2[,2]),]
data2[order(data2[,2]),5]
data2[order(data2[,2]),2]
data2[order(data2[,2])[5],]
data2[order(data2[,2]),]
data2[order(data2[,2],data[,1]),]
data2[order(data2[,2],-data[,1]),]
prova <- data2[order(data2[,2]),]
prova2 <- prova[order(data2[,2],data2[,1]),]
View(prova2)
prova2
prova
prova2 <- prova[order(data2[,1]),]
prova2
prova2 <- prova[order(data2[,2]),]
prova2
help(order)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/best.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
names(prova)
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sameState <- split(outcomes,outcomes$State)
data <- data.frame(sameState[state])
data <- data.frame(sameState["TX"])
data2 <- data.frame(cbind(data[,2],data[,11]))
names(data2)
data2 <- data.frame(name = cbind(data[,2], outcome = data[,11]))
names(data2)
data2 <- data.frame(cbind(name = data[,2], outcome = data[,11]))
names(dat2)
names(data2)
prova <- data2[order(data2$name,data2$outcome),]
View(prova)
prova <- data2[order(data2$outcome,data2$name),]
View(prova)
prova
length(!is.na(suppressWarnings(as.numeric(data2[,2]))))
length(data2[!is.na(suppressWarnings(as.numeric(data2[,2]))),1])
as.numeric(data2[,2])
View(data2)
data2
as.numeric(data2$outcome)
data2$outcome
typeof(data2)
typeof(data2$outcome)
data2 <- data.frame(cbind(name = data[,2], outcome = as.numeric(data[,11])))
data2
data2 <- data.frame(cbind(name = data[,2], outcome = suppressWarning(as.numeric(data[,11]))))
data2 <- data.frame(cbind(name = data[,2], outcome = suppressWarnings(as.numeric(data[,11]))))
data2
length(!is.na(data2[,2]))
length(data2[!is.na(data2[,2]),1])
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
help (suppressWarnings)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
rankhospital("TX","heart failure", 4)
typeof(rank)
typeof(position)
position != NA
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
if(!is.na(position)){
!is.na(position)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
rankhospital("TX","heart failure", 4)
View(data2)
sorted  <- data2[order(data2$outcome,data2$name),]
View(sorted)
sorted  <- data2[order(data2$outcome),]
View(sorted)
sorted
typeof(data2)
typeof(data2$outcome)
typeof(data[,17])
help(as.numeric)
as.numeric(data[,17])
typeof(as.numeric(data[,17]))
data.frame(name = data[,2], outcome = suppressWarnings(as.numeric(data[,17])))
data2 <- data.frame(name = data[,2], outcome = suppressWarnings(as.numeric(data[,17])))
View(data2)
typeof(data2[,2])
sorted  <- data2[order(data2$outcome,data2$name),]
View(sorted)
sorted
sorted[position,1]
sorted[4,1]
sorted
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure", 4)
View(sorted)
sorted
sorted[,1]
sorted[4,1]
prova <- sorted[4,1]
prova
sorted[[4,1]]
View(sorted)
src(sorted)
str(sorted)
str(data2)
str(data)
summary(data)
provona <- data.frame(name = data[,2], outcome = suppressWarnings(as.numeric(data[,11])))
View(provona)
summary(provona)
str(provona)
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit
submit()
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
submit()
rankhospital("TX","heart failure",4)
sorted
typeof(sorted[,2])
typeof(sorted[,1])
as.character(sorted[,1])
resorted <- as.character(sorted[,1])
typeof(resorted)
resorted(4)
resorted[4]
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("TX","heart failure",4)
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
rankhospital("MD","heart attack", "worst")
rankhospital("MD","heart attack", "worst")
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankhospital.R')
rankhospital("MD","heart attack", "worst")
rankhospital("MD","heart attack", "worst")
rankhospital("MD","heart attack", "worst")
submit()
outcomes <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sameState <- split(outcomes,outcomes$State)
help(lapply)
lapply(sameState,mean)
warnings
warnings()
lapply(as.numeric(sameState[,11]),mean)
lapply(as.numeric(sameState[,,11]),mean)
sameState[[,11]]
str(sameState)
summary(sameState)
prova <- lapply(sameState, order(x[,11],x[,2],na.last = TRUE))
prova <- lapply(sameState, function(x) order(x[,11],x[,2],na.last = TRUE))
prova <- lapply(sameState, function(x) order(x[,11],na.last = TRUE))
prova <- lapply(sameState, function(x) order(x[,2],na.last = TRUE))
prova <- lapply(sameState, order(sameState[,2],na.last = TRUE))
prova <- lapply(sameState, function(x) order(x$Hospital.Name,na.last = TRUE))
prova <- lapply(sameState, function(x) order(as.numeric(x[,11]),na.last = TRUE))
warning()
warnings()
prova <- lapply(sameState, function(x) order(as.numeric(x[,11]),na.last = TRUE))
warnings()
head(rankall("heart attack",20),10)
source('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankall.R')
head(rankall("heart attack",20),10)
tail(rankall("pneumonia","worst"),3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
9
submit()
submit()
debugSource('~/Documents/DataScienceCoursera/Rstudio_docs/Assignment3/rankall.R')
rankall("heart attack",20)
rankall("heart attack",20)
rankall("heart attack",20)
ordered_state_data <- order(data_by_state[3], data_by_state$Hospital.Name, na.last=NA)
data_by_state[3]
prova <- data_by_state[1]
prova
prova[3]
prova[1]
prova[2]
order(prova[3],prova$Hospital.Name, na.last =NA)
order(prova[,3],prova$Hospital.Name, na.last =NA)
order(prova[[,3]],prova$Hospital.Name, na.last =NA)
order(prova[[3]],prova$Hospital.Name, na.last =NA)
order(prova,prova$Hospital.Name, na.last =NA)
order(prova,prova$Hospital.Name, na.last =NA)
